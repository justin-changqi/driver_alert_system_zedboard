/*
 * i2c.c
 *
 *  Created on: Jun 11, 2018
 *      Author: Justin Zhang
 */

/***************************** Include Files **********************************/
#include "i2c.h"

#define TESTI2C_

#ifdef TESTI2C
int main()
{
	int Status;

	xil_printf("I2C initialize \r\n");
	Status = initI2c();
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}
	xil_printf("Init success! \r\n");
	Status = sendData();
	if (Status != XST_SUCCESS) {
		xil_printf("sent failure \r\n");
		return XST_FAILURE;
	}
	xil_printf("sent data \r\n");
}
#endif

int initI2c()
{
	int Status;
	XIicPs_Config *Config;

	Config = XIicPs_LookupConfig(IIC_DEVICE_ID);
	if (NULL == Config) {
		return XST_FAILURE;
	}
	Status = XIicPs_CfgInitialize(&Iic, Config, Config->BaseAddress);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Perform a self-test to ensure that the hardware was built correctly.
	 */
	Status = XIicPs_SelfTest(&Iic);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}

	/*
	 * Set the IIC serial clock rate.
	 */
	XIicPs_SetSClk(&Iic, IIC_SCLK_RATE);

	SendBuffer[0] = (u8)0x02;
	RecvBuffer[0] = 0;

	return XST_SUCCESS;
}

int sendData(u8 data)
{
	int Status;
	Status = XIicPs_MasterSendPolled(&Iic, SendBuffer,
				 TEST_BUFFER_SIZE, IIC_SLAVE_ADDR);
	if (Status != XST_SUCCESS) {
		return XST_FAILURE;
	}
	while (XIicPs_BusIsBusy(&Iic)) {
		/* NOP */
	}
	return XST_SUCCESS;
}
